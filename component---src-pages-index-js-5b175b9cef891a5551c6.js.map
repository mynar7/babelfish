{"version":3,"sources":["webpack:///./src/components/translationResults.js","webpack:///./src/components/listenButton.js","webpack:///./src/components/searchableDropdown.js","webpack:///./src/components/isoLangs.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/speechRecognition.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["translationResults","speechState","useSpeechContext","react_default","a","createElement","Fragment","results","length","map","_ref","index","spoken","translated","key","listenButton","_useSpeechContext","listening","toggleListening","className","onClick","searchableDropdown","listName","_ref$list","list","action","currentValue","clearAction","inputEl","useRef","htmlFor","ref","placeholder","name","onChange","e","value","console","log","current","listItem","find","item","handleChange","target","id","label","code","isoLangs","IndexPage","setFromLang","setToLang","clearFromLang","clearToLang","_useSpeechContext$spe","toLang","fromLang","layout","seo","title","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","pathname","string","isRequired","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","object","translate","term","fetch","then","res","catch","err","speechRecognition","updateLastSpoken","addTranslationResult","useEffect","recognition","window","SpeechRecognition","webkitSpeechRecognition","interimResults","handleResult","regenerator_default","mark","_callee","result","translation","wrap","_context","prev","next","isFinal","transcript","sent","stop","_x","apply","this","arguments","restartListener","start","addEventListener","removeEventListener","createContext","func","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_link_default","to","color","textDecoration","Layout","children","_856328897","header","node"],"mappings":"qJAGeA,EAAA,WAAM,IACXC,EAAgBC,cAAhBD,YAER,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEIL,EAAYM,QAAQC,OAAS,EAC3BP,EAAYM,QAAQE,IAAI,SAAAC,EAAuBC,GAAvB,IAAEC,EAAFF,EAAEE,OAAQC,EAAVH,EAAUG,WAAV,OACxBV,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,CAAgBQ,IAAKH,GACnBR,EAAAC,EAAAC,cAAA,SAAIO,GACJT,EAAAC,EAAAC,cAAA,SAAIQ,MAGNV,EAAAC,EAAAC,cAAA,2ICbKU,EAAA,WAAM,IAAAC,EACiCd,cAA/Be,EADFD,EACZf,YAAcgB,UAAYC,EADdF,EACcE,gBACjC,OACEf,EAAAC,EAAAC,cAAA,UAAQc,UAAU,2EAChBC,QAASF,GACRD,EAAY,OAAS,WCLbI,SAAA,SAAAX,GAA8D,IAA5DY,EAA4DZ,EAA5DY,SAA4DC,EAAAb,EAAlDc,YAAkD,IAAAD,EAA3C,GAA2CA,EAAvCE,EAAuCf,EAAvCe,OAAQC,EAA+BhB,EAA/BgB,aAAcC,EAAiBjB,EAAjBiB,YACpDC,EAAUC,iBAAO,MAgBvB,OACE1B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,+CACbhB,EAAAC,EAAAC,cAAA,SAAOc,UAAU,OAAOW,QAASR,EAAW,UAAWA,EAAvD,MACAnB,EAAAC,EAAAC,cAAA,SAAO0B,IAAKH,EAASI,YAAaN,EAAcP,UAAU,0CAA0CK,KAAMF,EAAUW,KAAMX,EAAW,SAAUY,SAAU,SAACC,GAAD,OAjB7J,SAAsBC,GACpBC,QAAQC,IAAIF,GACZR,EAAQW,QAAQH,MAAQA,EACxB,IAAMI,EAAWhB,EAAKiB,KAAK,SAACC,GAAD,OAAUA,EAAKT,OAASG,IACnDC,QAAQC,IAAIE,GACRA,GACFf,EAAOe,GAWyJG,CAAaR,EAAES,OAAOR,UACtLjC,EAAAC,EAAAC,cAAA,YAAUwC,GAAIvB,GACXE,EAAKf,IAAI,SAACiC,EAAM/B,GAAP,OACRR,EAAAC,EAAAC,cAAA,UAAQ+B,MAAOM,EAAKT,KAAMnB,IAAKH,EAAOmC,MAAOJ,EAAKK,UAGtD5C,EAAAC,EAAAC,cAAA,UAAQe,QAdZ,WACEQ,EAAQW,QAAQH,MAAQ,GACxBT,KAYgCR,UAAU,kEAAxC,YC7BS6B,EAAA,CACb,CACEf,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,cACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,aACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,OAER,CACEd,KAAM,uBACNc,KAAM,SAER,CACEd,KAAM,wBACNc,KAAM,SAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,iBACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,OAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,OAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,OACNc,KAAM,MAER,CACEd,KAAM,aACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,MACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,aACNc,KAAM,MAER,CACEd,KAAM,gBACNc,KAAM,MAER,CACEd,KAAM,aACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,oBACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,oBACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,gCACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,WACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,eACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,UACNc,KAAM,MAER,CACEd,KAAM,QACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,sBACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,CACEd,KAAM,YACNc,KAAM,MAER,CACEd,KAAM,SACNc,KAAM,MAER,C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","file":"component---src-pages-index-js-5b175b9cef891a5551c6.js","sourcesContent":["import React from 'react'\nimport { useSpeechContext } from './providers/speechProvider'\n\nexport default () => {\n  const { speechState } = useSpeechContext()\n\n  return (\n    <>\n      {\n        speechState.results.length > 0\n        ? speechState.results.map(({spoken, translated}, index) => (\n          <React.Fragment key={index}>\n            <p>{spoken}</p>\n            <p>{translated}</p>\n          </React.Fragment>\n        ))\n        : <p>Press 'Listen' and allow Babelfish to use your microphone to translate your spoken words to Japanese! (Only works in Chrome)</p>\n      }\n    </>\n  )\n}","import React from 'react'\nimport { useSpeechContext } from './providers/speechProvider'\n\nexport default () => {\n  const {speechState: {listening}, toggleListening} = useSpeechContext()\n  return (\n    <button className=\"bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded\"\n      onClick={toggleListening}>\n      {listening ? 'Stop' : 'Listen'}\n    </button>\n  )\n}","import React, { useRef } from 'react'\n\n\nexport default ({listName, list = [], action, currentValue, clearAction}) => {\n  const inputEl = useRef(null)\n\n  function handleChange(value) {\n    console.log(value)\n    inputEl.current.value = value\n    const listItem = list.find((item) => item.name === value)\n    console.log(listItem)\n    if (listItem)\n      action(listItem)\n  }\n\n  function handleClear() {\n    inputEl.current.value = ''\n    clearAction()\n  }\n\n  return (\n    <div className=\"flex w-1/3 mb-4 items-center justify-center\">\n      <label className=\"mr-2\" htmlFor={listName + '-input'}>{listName}: </label>\n      <input ref={inputEl} placeholder={currentValue} className=\"border-solid border p-1 border-gray-600\" list={listName} name={listName + '-input'} onChange={(e) => handleChange(e.target.value)}/>\n      <datalist id={listName}>\n        {list.map((item, index) => (\n          <option value={item.name} key={index} label={item.code} />\n        ))}\n      </datalist>\n      <button onClick={handleClear} className=\"bg-purple-500 hover:bg-purple-700 text-white py-1 px-4 rounded\">Clear</button>\n    </div>\n  )\n}","export default [\n  {\n    name: 'Afrikaans',\n    code: 'af',\n  },\n  {\n    name: 'Albanian',\n    code: 'sq',\n  },\n  {\n    name: 'Amharic',\n    code: 'am',\n  },\n  {\n    name: 'Arabic',\n    code: 'ar',\n  },\n  {\n    name: 'Armenian',\n    code: 'hy',\n  },\n  {\n    name: 'Azerbaijani',\n    code: 'az',\n  },\n  {\n    name: 'Basque',\n    code: 'eu',\n  },\n  {\n    name: 'Belarusian',\n    code: 'be',\n  },\n  {\n    name: 'Bengali',\n    code: 'bn',\n  },\n  {\n    name: 'Bosnian',\n    code: 'bs',\n  },\n  {\n    name: 'Bulgarian',\n    code: 'bg',\n  },\n  {\n    name: 'Catalan',\n    code: 'ca',\n  },\n  {\n    name: 'Cebuano',\n    code: 'ceb',\n  },\n  {\n    name: 'Chinese (Simplified)',\n    code: 'zh-CN',\n  },\n  {\n    name: 'Chinese (Traditional)',\n    code: 'zh-TW',\n  },\n  {\n    name: 'Corsican',\n    code: 'co',\n  },\n  {\n    name: 'Croatian',\n    code: 'hr',\n  },\n  {\n    name: 'Czech',\n    code: 'cs',\n  },\n  {\n    name: 'Danish',\n    code: 'da',\n  },\n  {\n    name: 'Dutch',\n    code: 'nl',\n  },\n  {\n    name: 'English',\n    code: 'en',\n  },\n  {\n    name: 'Esperanto',\n    code: 'eo',\n  },\n  {\n    name: 'Estonian',\n    code: 'et',\n  },\n  {\n    name: 'Finnish',\n    code: 'fi',\n  },\n  {\n    name: 'French',\n    code: 'fr',\n  },\n  {\n    name: 'Frisian',\n    code: 'fy',\n  },\n  {\n    name: 'Galician',\n    code: 'gl',\n  },\n  {\n    name: 'Georgian',\n    code: 'ka',\n  },\n  {\n    name: 'German',\n    code: 'de',\n  },\n  {\n    name: 'Greek',\n    code: 'el',\n  },\n  {\n    name: 'Gujarati',\n    code: 'gu',\n  },\n  {\n    name: 'Haitian Creole',\n    code: 'ht',\n  },\n  {\n    name: 'Hausa',\n    code: 'ha',\n  },\n  {\n    name: 'Hawaiian',\n    code: 'haw',\n  },\n  {\n    name: 'Hebrew',\n    code: 'he',\n  },\n  {\n    name: 'Hindi',\n    code: 'hi',\n  },\n  {\n    name: 'Hmong',\n    code: 'hmn',\n  },\n  {\n    name: 'Hungarian',\n    code: 'hu',\n  },\n  {\n    name: 'Icelandic',\n    code: 'is',\n  },\n  {\n    name: 'Igbo',\n    code: 'ig',\n  },\n  {\n    name: 'Indonesian',\n    code: 'id',\n  },\n  {\n    name: 'Irish',\n    code: 'ga',\n  },\n  {\n    name: 'Italian',\n    code: 'it',\n  },\n  {\n    name: 'Japanese',\n    code: 'ja',\n  },\n  {\n    name: 'Javanese',\n    code: 'jw',\n  },\n  {\n    name: 'Kannada',\n    code: 'kn',\n  },\n  {\n    name: 'Kazakh',\n    code: 'kk',\n  },\n  {\n    name: 'Khmer',\n    code: 'km',\n  },\n  {\n    name: 'Korean',\n    code: 'ko',\n  },\n  {\n    name: 'Kurdish',\n    code: 'ku',\n  },\n  {\n    name: 'Kyrgyz',\n    code: 'ky',\n  },\n  {\n    name: 'Lao',\n    code: 'lo',\n  },\n  {\n    name: 'Latin',\n    code: 'la',\n  },\n  {\n    name: 'Latvian',\n    code: 'lv',\n  },\n  {\n    name: 'Lithuanian',\n    code: 'lt',\n  },\n  {\n    name: 'Luxembourgish',\n    code: 'lb',\n  },\n  {\n    name: 'Macedonian',\n    code: 'mk',\n  },\n  {\n    name: 'Malagasy',\n    code: 'mg',\n  },\n  {\n    name: 'Malay',\n    code: 'ms',\n  },\n  {\n    name: 'Malayalam',\n    code: 'ml',\n  },\n  {\n    name: 'Maltese',\n    code: 'mt',\n  },\n  {\n    name: 'Maori',\n    code: 'mi',\n  },\n  {\n    name: 'Marathi',\n    code: 'mr',\n  },\n  {\n    name: 'Mongolian',\n    code: 'mn',\n  },\n  {\n    name: 'Myanmar (Burmese)',\n    code: 'my',\n  },\n  {\n    name: 'Nepali',\n    code: 'ne',\n  },\n  {\n    name: 'Norwegian',\n    code: 'no',\n  },\n  {\n    name: 'Nyanja (Chichewa)',\n    code: 'ny',\n  },\n  {\n    name: 'Pashto',\n    code: 'ps',\n  },\n  {\n    name: 'Persian',\n    code: 'fa',\n  },\n  {\n    name: 'Polish',\n    code: 'pl',\n  },\n  {\n    name: 'Portuguese (Portugal, Brazil)',\n    code: 'pt',\n  },\n  {\n    name: 'Punjabi',\n    code: 'pa',\n  },\n  {\n    name: 'Romanian',\n    code: 'ro',\n  },\n  {\n    name: 'Russian',\n    code: 'ru',\n  },\n  {\n    name: 'Samoan',\n    code: 'sm',\n  },\n  {\n    name: 'Scots Gaelic',\n    code: 'gd',\n  },\n  {\n    name: 'Serbian',\n    code: 'sr',\n  },\n  {\n    name: 'Sesotho',\n    code: 'st',\n  },\n  {\n    name: 'Shona',\n    code: 'sn',\n  },\n  {\n    name: 'Sindhi',\n    code: 'sd',\n  },\n  {\n    name: 'Sinhala (Sinhalese)',\n    code: 'si',\n  },\n  {\n    name: 'Slovak',\n    code: 'sk',\n  },\n  {\n    name: 'Slovenian',\n    code: 'sl',\n  },\n  {\n    name: 'Somali',\n    code: 'so',\n  },\n  {\n    name: 'Spanish',\n    code: 'es',\n  },\n  {\n    name: 'Sundanese',\n    code: 'su',\n  },\n  {\n    name: 'Swahili',\n    code: 'sw',\n  },\n  {\n    name: 'Swedish',\n    code: 'sv',\n  },\n  {\n    name: 'Tagalog (Filipino)',\n    code: 'tl',\n  },\n  {\n    name: 'Tajik',\n    code: 'tg',\n  },\n  {\n    name: 'Tamil',\n    code: 'ta',\n  },\n  {\n    name: 'Telugu',\n    code: 'te',\n  },\n  {\n    name: 'Thai',\n    code: 'th',\n  },\n  {\n    name: 'Turkish',\n    code: 'tr',\n  },\n  {\n    name: 'Ukrainian',\n    code: 'uk',\n  },\n  {\n    name: 'Urdu',\n    code: 'ur',\n  },\n  {\n    name: 'Uzbek',\n    code: 'uz',\n  },\n  {\n    name: 'Vietnamese',\n    code: 'vi',\n  },\n  {\n    name: 'Welsh',\n    code: 'cy',\n  },\n  {\n    name: 'Xhosa',\n    code: 'xh',\n  },\n  {\n    name: 'Yiddish',\n    code: 'yi',\n  },\n  {\n    name: 'Yoruba',\n    code: 'yo',\n  },\n  {\n    name: 'Zulu',\n    code: 'zu',\n  },\n]","import React from \"react\"\n// import { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TranslationResults from '../components/translationResults'\nimport ListenButton from '../components/listenButton'\nimport SearchableDropdown from '../components/searchableDropdown'\nimport isoLangs from '../components/isoLangs'\nimport { useSpeechContext } from '../components/providers/speechProvider'\n\nconst IndexPage = () => {\n  const { setFromLang, setToLang, clearFromLang, clearToLang, speechState: {toLang, fromLang} } = useSpeechContext()\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <div className=\"flex justify-center w-full\">\n        <SearchableDropdown action={setFromLang} listName={'To'} list={isoLangs} currentValue={fromLang.name} clearAction={clearFromLang}/>\n        <SearchableDropdown action={setToLang} listName={'From'} list={isoLangs} currentValue={toLang.name} clearAction={clearToLang}/>\n      </div>\n      <div className=\"flex justify-center\">\n        <div className=\"w-1/2\">\n          <TranslationResults />\n        </div>\n        <div>\n          <ListenButton/>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","// eslint-disable-next-line\nimport React, { useEffect, useRef } from 'react'\nimport { useSpeechContext } from './providers/speechProvider'\n\n\nfunction translate(term, fromLang, toLang) {\n  const url = `https://translate.googleapis.com/translate_a/single?client=gtx&sl=${fromLang}&tl=${toLang}&dt=t&q=${term}&dt=rm`;\n  return fetch(url)\n  .then(res => res.json())\n  .then(res => {\n      console.log(res)\n      return res[0][0][0] ? res[0][0][0] : null\n  })\n  .catch(err => console.log(err));\n}\n\nexport default () => {\n  const { speechState: {listening, fromLang: {code: fromLang}, toLang: {code: toLang}}, updateLastSpoken, addTranslationResult } = useSpeechContext()\n  useEffect(() => {\n    if(!listening) return\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    const recognition = new SpeechRecognition();\n    recognition.interimResults = true;\n    recognition.lang = fromLang;\n    const handleResult = async (e) => {\n      if (e.results[0].isFinal) {\n        const result = e.results[0][0].transcript;\n        console.log(e.results[0])\n        updateLastSpoken(result)\n        const translation = await translate(result, fromLang, toLang);\n        addTranslationResult(translation)\n      }\n    }\n    const restartListener = () => {\n      if(fromLang === '' || toLang === '') return\n      recognition.start()\n    }\n    recognition.addEventListener('result', handleResult)\n    recognition.addEventListener('end', restartListener)\n    if(fromLang === '' || toLang === '') return\n    recognition.start()\n    return () => {\n      if(!listening) return\n      recognition.removeEventListener('result', handleResult)\n      recognition.removeEventListener('end', restartListener)\n    }\n  }, [listening, fromLang, toLang])\n  return null\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport SpeechRecognition from './speechRecognition'\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SpeechRecognition />\n      <div className=\"font-serif\">\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container mx-auto\">\n          <main>{children}</main>\n        </div>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}